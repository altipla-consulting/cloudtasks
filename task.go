package cloudtasks

import (
	"encoding/json"
	"fmt"
)

// Task is a task sent or receieved from a queue.
type Task struct {
	key     string // key we are invoking
	name    string // name of the task, autogenerated if empty
	payload []byte // body of the request

	// Read only. The current retry count.
	Retries int64
}

// Name returns the name of the task. By default it is autogenerated.
func (task *Task) Name() string {
	return task.name
}

// Read unmarshals the task payload into the provided destination.
func (task *Task) Read(dest interface{}) error {
	if err := json.Unmarshal(task.payload, dest); err != nil {
		return fmt.Errorf("cloudtasks: cannot read task payload: %w", err)
	}
	return nil
}

// TaskOption configures tasks when creating them.
type TaskOption func(task *Task)

// WithName configures a custom name for the task. By default it will be autogenerated. A custom name could be problematic
// with tombstones (task names that can't be repeated) and concurrency controls, so assign it with care and read
// Google Cloud Tasks documentation before using it.
func WithName(name string) TaskOption {
	return func(task *Task) {
		task.name = name
	}
}

type ExternalTask struct {
	URL     string
	Payload any
}
